[{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/complete-age-tables.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Complete Age Tables","text":"give tables age ranges age groups reference. Note: ages 0 110.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/complete-age-tables.html","id":"age-group-tables","dir":"Articles","previous_headings":"","what":"Age Group Tables","title":"Complete Age Tables","text":"Table 1: UDS Battery Age Groups Table 2: Rey AVLT Trials Age Groups Table 3: Rey AVLT Recognition Age Groups Table 4: Oral Trail Making Tests Age Groups Table 5: COWAT Age Groups Table 6: WAIS-R Digit Symbol Age Groups","code":""},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/ranges-for-standardizing-to-standardized-scores.html","id":"ranges-for-standardizing","dir":"Articles","previous_headings":"","what":"Ranges for Standardizing","title":"Ranges for Standardizing to Standardized Scores","text":"Table 1: Ranges use Rey AVLT Recognition Accuracy (cog_ravlt_recog_acc). Columns: Rey AVLT Recognition Accuracy age groups (see Table 3 vignette('complete-age-tables')) sex. Table 2: Ranges use F+L+C Words (cog_flc_flu). Columns: COWAT age groups (see Table 5 vignette('complete-age-tables')) Table 3: Ranges use WAIS-R Digit Symbol (cog_digsym). Columns: WAIS-R Digit Symbol age groups (see Table 6 vignette('complete-age-tables'))","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/standardized-scores.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Standardized Scores","text":"main goal produce standardized scores long list cognitive measures. standardized scores meant transform raw scores “easier--interpret” scale. use two approaches standardization. subset variables interest, calculate z-scores. , subtract average score raw score, divide standard deviation. means standard deviations may depend age, education, /sex, obtained previous studies. meant represent average standard deviations individuals cognitively impaired. second approach uses standardized scores based set ranges. , ranges meant illustrate range performance one expect individuals cognitively impaired. , include details standardized scores calculated supported cognitive measures.","code":"library(wlsRedcapApp, quietly = T) library(dplyr, quietly = T) library(tidyr, quietly = T)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/standardized-scores.html","id":"standardized-scores-via-z-scores","dir":"Articles","previous_headings":"","what":"Standardized Scores via z-scores","title":"Standardized Scores","text":"Table 1: Variables standardized using z-scores. Table 1 shows variables standardized via z-scores. variable, means standard deviations used can found corresponding entry list for_zscores. , walk worked example also show find standardized scores data set. can find means standard deviations used “RAVLT Total Learning” score using corresponding cog_vars name given Table 1 follows: , see means (m) standard deviations (sd) given based age group. , standardize raw score, need know participants age find right age group. example, say want standardize raw score 50 72 year old. First, find age group either using Table 2 vignette(\"complete-age-tables\"), using function get_age_group(): Using , can find mean standard deviation needed standardize table 37.1 7.5. standardized score corresponding raw “RAVLT Total Learning” score 50 72 year old therefore 50−37.17.5=1.72\\frac{50 - 37.1}{7.5} = 1.72. can also done using function standardize_to_z_scores(): Let us consider manageable data set. ?demo_data, get first 20 rows, just subset columns. want standardize three cognitive variables cog_craft_delay_par, cog_nsb_total, cog_otmta_time. standardized using z-scores. can , make sure sex variable right format: f female, m male. can standardize variables one time: Alternatively, can utilize function dplyr::across() refer ?for_zscores list standardize variables data set included list. also take advantage fact name columns correspond exactly names list ?for_zscores, can use dplyr::cur_column() function get variable name.","code":"for_zscores$cog_ravlt_a1_a5_total # A tibble: 8 × 3   ravlt_trials_age_group     m    sd                    <int> <dbl> <dbl> 1                      1  53.9   6.7 2                      2  56.1   7.3 3                      3  53.6   8.3 4                      4  51.1   8.6 5                      5  47.6   8.1 6                      6  43.4   7.7 7                      7  37.1   7.5 8                      8  37.1   7.5 get_age_group(age = 72, group_type = \"ravlt_trials\") [1] 7 standardize_to_z_scores(   raw_scores = 50,    cog_var_name = \"cog_ravlt_a1_a5_total\",    age = 72 ) [1] 1.72 data_example <- demo_raw_data |>    head(n = 20) |>    select(     cog_studyid,      cog_test_date,     cog_age,     cog_education,     cog_sex,     cog_craft_delay_par,     cog_nsb_total,     cog_otmta_time   )  gt::gt(data_example) data_example <- data_example |>    mutate(     cog_sex = case_match(       cog_sex,       \"Male\" ~ \"m\",       \"Female\" ~ \"f\",       .default = NA     )   ) data_example |>    mutate(     standardized_cog_craft_delay_par = standardize_to_z_scores(       raw_score = cog_craft_delay_par,        cog_var_name = \"cog_craft_delay_par\",        age = cog_age,        sex = cog_sex,       education = cog_education     ),     standardized_cog_nsb_total = standardize_to_z_scores(       raw_score = cog_nsb_total,        cog_var_name = \"cog_nsb_total\",        age = cog_age,        sex = cog_sex,       education = cog_education     ),     standardized_cog_otmta_time = standardize_to_z_scores(       raw_score = cog_otmta_time,        cog_var_name = \"cog_otmta_time\",        age = cog_age     )   ) |>    gt::gt() data_example |>    mutate(     across(       .cols = any_of(names(for_zscores)),       .fn = \\(x) standardize_to_z_scores(         x,         cog_var_name = cur_column(),         age = cog_age,         sex = cog_sex,         education = cog_education       )     )   ) |>    gt::gt()"},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/standardized-scores.html","id":"worked-example","dir":"Articles","previous_headings":"","what":"Worked Example","title":"Standardized Scores","text":"can find means standard deviations used “RAVLT Total Learning” score using corresponding cog_vars name given Table 1 follows: , see means (m) standard deviations (sd) given based age group. , standardize raw score, need know participants age find right age group. example, say want standardize raw score 50 72 year old. First, find age group either using Table 2 vignette(\"complete-age-tables\"), using function get_age_group(): Using , can find mean standard deviation needed standardize table 37.1 7.5. standardized score corresponding raw “RAVLT Total Learning” score 50 72 year old therefore 50−37.17.5=1.72\\frac{50 - 37.1}{7.5} = 1.72. can also done using function standardize_to_z_scores():","code":"for_zscores$cog_ravlt_a1_a5_total # A tibble: 8 × 3   ravlt_trials_age_group     m    sd                    <int> <dbl> <dbl> 1                      1  53.9   6.7 2                      2  56.1   7.3 3                      3  53.6   8.3 4                      4  51.1   8.6 5                      5  47.6   8.1 6                      6  43.4   7.7 7                      7  37.1   7.5 8                      8  37.1   7.5 get_age_group(age = 72, group_type = \"ravlt_trials\") [1] 7 standardize_to_z_scores(   raw_scores = 50,    cog_var_name = \"cog_ravlt_a1_a5_total\",    age = 72 ) [1] 1.72"},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/standardized-scores.html","id":"standardize-scores-in-a-data-set","dir":"Articles","previous_headings":"","what":"Standardize scores in a data set","title":"Standardized Scores","text":"Let us consider manageable data set. ?demo_data, get first 20 rows, just subset columns. want standardize three cognitive variables cog_craft_delay_par, cog_nsb_total, cog_otmta_time. standardized using z-scores. can , make sure sex variable right format: f female, m male. can standardize variables one time: Alternatively, can utilize function dplyr::across() refer ?for_zscores list standardize variables data set included list. also take advantage fact name columns correspond exactly names list ?for_zscores, can use dplyr::cur_column() function get variable name.","code":"data_example <- demo_raw_data |>    head(n = 20) |>    select(     cog_studyid,      cog_test_date,     cog_age,     cog_education,     cog_sex,     cog_craft_delay_par,     cog_nsb_total,     cog_otmta_time   )  gt::gt(data_example) data_example <- data_example |>    mutate(     cog_sex = case_match(       cog_sex,       \"Male\" ~ \"m\",       \"Female\" ~ \"f\",       .default = NA     )   ) data_example |>    mutate(     standardized_cog_craft_delay_par = standardize_to_z_scores(       raw_score = cog_craft_delay_par,        cog_var_name = \"cog_craft_delay_par\",        age = cog_age,        sex = cog_sex,       education = cog_education     ),     standardized_cog_nsb_total = standardize_to_z_scores(       raw_score = cog_nsb_total,        cog_var_name = \"cog_nsb_total\",        age = cog_age,        sex = cog_sex,       education = cog_education     ),     standardized_cog_otmta_time = standardize_to_z_scores(       raw_score = cog_otmta_time,        cog_var_name = \"cog_otmta_time\",        age = cog_age     )   ) |>    gt::gt() data_example |>    mutate(     across(       .cols = any_of(names(for_zscores)),       .fn = \\(x) standardize_to_z_scores(         x,         cog_var_name = cur_column(),         age = cog_age,         sex = cog_sex,         education = cog_education       )     )   ) |>    gt::gt()"},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/standardized-scores.html","id":"range-based-standardized-scores","dir":"Articles","previous_headings":"","what":"Range Based Standardized Scores","title":"Standardized Scores","text":"cognitive measures “WAIS-R Digit Symbol”, “F+L+C Words”, “RAVLT Recognition”, use ranges look standardized scores. illustrate . Say interested standardizing RAVLT Recognition accuracy 75% 72 year old male. , go table ranges cognitive variable: look table, need sex age group participant. 72 year old belongs age group E (see Table 3 vignette(\"complete-age-tables\")). Now, look ravlt_recog_ranges table (Table 1 vignette(\"ranges--standardizing--standardized-scores\")), find rows males column E creates interval containing 75. Table 2 illustrates thought process. First, find column age group E (highlighted grey). find two values column creates interval containing raw score 75 (highlighted red background). Finally, find standardized scores first column (highlighted red text). standardized score smallest two values. .e. accuracy score 75% 72 year old male corresponds standardized score 7. Note: intervals created process closed lower end open upper end. means, raw score matches exactly score table, standardized score one listed row. example , participant raw score 73, standardized score changed, score 77 resulted standardized score 8. Table 2: Illustration look table ranges find standardized score. , find standardized score raw Rey AVLT Recognition Accuracy score 75 72 year old male (age group E) , let us consider example work actual data set want standardize three variables cog_ravlt_recog_acc (RAVLT Recognition), cog_flc_flu (F+L+C Words), cog_digsym (WAIS-R Digit Symbol). , need fix format sex variable either m (males) f (females). can create columns standardized scores three variables interest using functions standardized_*:","code":"ravlt_recog_ranges # A tibble: 34 × 12    standardized_score sex       A     B     C     D     E     F     G     H                 <dbl> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  1                  2 m         0     0     0     0     0     0     0     0  2                  3 m        67    67    67    63    63    60    60     0  3                  4 m        70    70    67    67    67    63    63    60  4                  5 m        73    73    70    67    67    63    63    63  5                  6 m        73    73    70    70    70    67    67    67  6                  7 m        80    80    73    73    73    73    73    70  7                  8 m        87    83    77    77    77    77    77    73  8                  9 m        90    87    83    83    80    80    80    80  9                 10 m        90    90    87    87    87    87    83    83 10                 11 m        97    93    90    90    90    90    90    90 # ℹ 24 more rows # ℹ 2 more variables: I <dbl>, J <dbl> data_example_2 <- demo_raw_data |>    head(n = 20) |>    select(     cog_studyid,      cog_test_date,     cog_age,     cog_education,     cog_sex,     cog_ravlt_recog_acc,     cog_flc_flu,     cog_digsym   )  gt::gt(data_example_2) data_example_2 <- data_example_2 |>    mutate(     cog_sex = case_match(       cog_sex,       \"Male\" ~ \"m\",       \"Female\" ~ \"f\",       .default = NA     )   ) data_example_2 |>    mutate(     ss_ravlt_recog_acc = standardized_ravlt_recog_acc(cog_ravlt_recog_acc, age = cog_age, sex = cog_sex),     ss_flc_flu = standardized_digsym(cog_flc_flu, age = cog_age),     ss_digsym = standardized_digsym(cog_digsym, age = cog_age)   ) # A tibble: 20 × 11    cog_studyid cog_test_date cog_age cog_education cog_sex cog_ravlt_recog_acc    <chr>       <chr>           <dbl>         <dbl> <chr>                 <dbl>  1 326231g     8/9/2021           79            12 m                        NA  2 326231g     6/13/2022          82            12 m                        76  3 900505g     1/29/2021          84            13 m                        NA  4 900505g     11/1/2022          83            13 m                        NA  5 262128g     4/30/2021          81            12 f                        NA  6 262128g     3/31/2023          82            12 f                        NA  7 698157g     4/1/2021           82            19 f                        NA  8 698157g     2/7/2023           84            19 f                        NA  9 521125g     1/7/2021           81            12 m                        NA 10 521125g     11/1/2022          81            12 m                        NA 11 640359g     3/24/2021          81            12 f                        NA 12 640359g     10/31/2023         84            12 f                        80 13 267087g     5/26/2021          83            16 m                        NA 14 267087g     4/6/2023           79            16 m                        NA 15 296393g     1/12/2021          81            12 f                        NA 16 296393g     10/25/2022         82            12 f                        NA 17 235642g     2/10/2021          83            14 f                        NA 18 235642g     9/1/2022           83            14 f                        90 19 867329g     1/14/2021          82            12 m                        NA 20 867329g     12/28/2023         82            12 m                        80 # ℹ 5 more variables: cog_flc_flu <dbl>, cog_digsym <dbl>, #   ss_ravlt_recog_acc <dbl>, ss_flc_flu <dbl>, ss_digsym <dbl>"},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/standardized-scores.html","id":"worked-example-1","dir":"Articles","previous_headings":"","what":"Worked Example","title":"Standardized Scores","text":"Say interested standardizing RAVLT Recognition accuracy 75% 72 year old male. , go table ranges cognitive variable: look table, need sex age group participant. 72 year old belongs age group E (see Table 3 vignette(\"complete-age-tables\")). Now, look ravlt_recog_ranges table (Table 1 vignette(\"ranges--standardizing--standardized-scores\")), find rows males column E creates interval containing 75. Table 2 illustrates thought process. First, find column age group E (highlighted grey). find two values column creates interval containing raw score 75 (highlighted red background). Finally, find standardized scores first column (highlighted red text). standardized score smallest two values. .e. accuracy score 75% 72 year old male corresponds standardized score 7. Note: intervals created process closed lower end open upper end. means, raw score matches exactly score table, standardized score one listed row. example , participant raw score 73, standardized score changed, score 77 resulted standardized score 8. Table 2: Illustration look table ranges find standardized score. , find standardized score raw Rey AVLT Recognition Accuracy score 75 72 year old male (age group E)","code":"ravlt_recog_ranges # A tibble: 34 × 12    standardized_score sex       A     B     C     D     E     F     G     H                 <dbl> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  1                  2 m         0     0     0     0     0     0     0     0  2                  3 m        67    67    67    63    63    60    60     0  3                  4 m        70    70    67    67    67    63    63    60  4                  5 m        73    73    70    67    67    63    63    63  5                  6 m        73    73    70    70    70    67    67    67  6                  7 m        80    80    73    73    73    73    73    70  7                  8 m        87    83    77    77    77    77    77    73  8                  9 m        90    87    83    83    80    80    80    80  9                 10 m        90    90    87    87    87    87    83    83 10                 11 m        97    93    90    90    90    90    90    90 # ℹ 24 more rows # ℹ 2 more variables: I <dbl>, J <dbl>"},{"path":"https://rmtrane.github.io/wlsRedcapApp/articles/standardized-scores.html","id":"standardized-scores-in-a-data-set","dir":"Articles","previous_headings":"","what":"Standardized scores in a data set","title":"Standardized Scores","text":", let us consider example work actual data set want standardize three variables cog_ravlt_recog_acc (RAVLT Recognition), cog_flc_flu (F+L+C Words), cog_digsym (WAIS-R Digit Symbol). , need fix format sex variable either m (males) f (females). can create columns standardized scores three variables interest using functions standardized_*:","code":"data_example_2 <- demo_raw_data |>    head(n = 20) |>    select(     cog_studyid,      cog_test_date,     cog_age,     cog_education,     cog_sex,     cog_ravlt_recog_acc,     cog_flc_flu,     cog_digsym   )  gt::gt(data_example_2) data_example_2 <- data_example_2 |>    mutate(     cog_sex = case_match(       cog_sex,       \"Male\" ~ \"m\",       \"Female\" ~ \"f\",       .default = NA     )   ) data_example_2 |>    mutate(     ss_ravlt_recog_acc = standardized_ravlt_recog_acc(cog_ravlt_recog_acc, age = cog_age, sex = cog_sex),     ss_flc_flu = standardized_digsym(cog_flc_flu, age = cog_age),     ss_digsym = standardized_digsym(cog_digsym, age = cog_age)   ) # A tibble: 20 × 11    cog_studyid cog_test_date cog_age cog_education cog_sex cog_ravlt_recog_acc    <chr>       <chr>           <dbl>         <dbl> <chr>                 <dbl>  1 326231g     8/9/2021           79            12 m                        NA  2 326231g     6/13/2022          82            12 m                        76  3 900505g     1/29/2021          84            13 m                        NA  4 900505g     11/1/2022          83            13 m                        NA  5 262128g     4/30/2021          81            12 f                        NA  6 262128g     3/31/2023          82            12 f                        NA  7 698157g     4/1/2021           82            19 f                        NA  8 698157g     2/7/2023           84            19 f                        NA  9 521125g     1/7/2021           81            12 m                        NA 10 521125g     11/1/2022          81            12 m                        NA 11 640359g     3/24/2021          81            12 f                        NA 12 640359g     10/31/2023         84            12 f                        80 13 267087g     5/26/2021          83            16 m                        NA 14 267087g     4/6/2023           79            16 m                        NA 15 296393g     1/12/2021          81            12 f                        NA 16 296393g     10/25/2022         82            12 f                        NA 17 235642g     2/10/2021          83            14 f                        NA 18 235642g     9/1/2022           83            14 f                        90 19 867329g     1/14/2021          82            12 m                        NA 20 867329g     12/28/2023         82            12 m                        80 # ℹ 5 more variables: cog_flc_flu <dbl>, cog_digsym <dbl>, #   ss_ravlt_recog_acc <dbl>, ss_flc_flu <dbl>, ss_digsym <dbl>"},{"path":"https://rmtrane.github.io/wlsRedcapApp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ralph Møller Trane. Author, maintainer. Victoria Williams. Author.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Møller Trane R, Williams V (2024). wlsRedcapApp: NACC T-Cog Neuropsychological Assessments. R package version 0.1.0, https://rmtrane.github.io/wlsRedcapApp/.","code":"@Manual{,   title = {wlsRedcapApp: NACC T-Cog Neuropsychological Assessments},   author = {Ralph {Møller Trane} and Victoria Williams},   year = {2024},   note = {R package version 0.1.0},   url = {https://rmtrane.github.io/wlsRedcapApp/}, }"},{"path":"https://rmtrane.github.io/wlsRedcapApp/index.html","id":"nacc-t-cog-neuropsychological-assessment","dir":"","previous_headings":"","what":"NACC T-Cog Neuropsychological Assessments","title":"NACC T-Cog Neuropsychological Assessments","text":"Ralph Møller Trane R package provides functions work outcomes NACC T-Cog Neuropsychological Assessment. main purpose creation summary table used dementia diagnoses decided consensus (see table below1).  11.2% 51.7% 36.4% 35% 44.3% 62.1% 0.4% 53.5% 7.1% 5% 30.9% 38.3% 15.9% 42.2% 68.1% 56.5% 65.6% 2.7%","code":"library(wlsRedcapApp)  main_table(   demo_data[1,] )"},{"path":"https://rmtrane.github.io/wlsRedcapApp/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"NACC T-Cog Neuropsychological Assessments","text":"Install package GitHub: main Shiny application, allows sift summary tables participants can launched first loaded package, calling wlsRedcapApp(). package includes demo data set (demo_data), allows explore functionality package particular Shiny app. data might seem completely made … . Visits might order (, later visits dates earlier first visits), outcomes might seem contradictory. data created scrambling actual PHI data, sole purpose testing showcasing R package. access WLS REDCap project, can download full data REDCap choose use data Shiny app. Simply follow instructions app.","code":"remotes::install_github(\"rmtrane/wlsRedcapApp\") library(wlsRedcapApp)  wlsRedcapApp()"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/add_standardized_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Standardized Scores to Data from REDCap — add_standardized_scores","title":"Add Standardized Scores to Data from REDCap — add_standardized_scores","text":"functions adds plethora standardized scores along grouping variables needed calculate standardized scores.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/add_standardized_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Standardized Scores to Data from REDCap — add_standardized_scores","text":"","code":"add_standardized_scores(dat)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/add_standardized_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Standardized Scores to Data from REDCap — add_standardized_scores","text":"dat tibble data.frame includes, least, following: cog_studyid cog_test_date cog_sex cog_education cog_age number variables present male_female otmt ravlt_trials_m_sd","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/cog_vars_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Labels for Cognitive Variables — cog_vars_labels","title":"Labels for Cognitive Variables — cog_vars_labels","text":"Labels Cognitive Variables","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/cog_vars_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labels for Cognitive Variables — cog_vars_labels","text":"","code":"cog_vars_labels"},{"path":[]},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/cowat_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"COWAT ranges — cowat_ranges","title":"COWAT ranges — cowat_ranges","text":"COWAT ranges","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/cowat_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"COWAT ranges — cowat_ranges","text":"","code":"cowat_ranges"},{"path":[]},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/dataPrepApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny App wrapping the data prep module — dataPrepApp","title":"Shiny App wrapping the data prep module — dataPrepApp","text":"Shiny App wrapping data prep module","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/dataPrepApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny App wrapping the data prep module — dataPrepApp","text":"","code":"dataPrepApp()"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/dataPrepModule.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Module for Preparing Data from the WLS REDCap Project — dataPrepUI","title":"Shiny Module for Preparing Data from the WLS REDCap Project — dataPrepUI","text":"shiny module presents options either pull data straight REDCap upload .csv file downloaded REDCap. pull REDCap, password required (contact ).","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/dataPrepModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Module for Preparing Data from the WLS REDCap Project — dataPrepUI","text":"","code":"dataPrepUI(id)  dataPrepServer(id)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/dataPrepModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Module for Preparing Data from the WLS REDCap Project — dataPrepUI","text":"id ID string match module UI module server.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/dataPrepModule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny Module for Preparing Data from the WLS REDCap Project — dataPrepUI","text":"tibble results prep_data().","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo Data Set — demo_data","title":"Demo Data Set — demo_data","text":"Demo Data Set","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo Data Set — demo_data","text":"","code":"demo_data"},{"path":[]},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demo_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Demo Raw Data Set — demo_raw_data","title":"Demo Raw Data Set — demo_raw_data","text":"Demo Raw Data Set","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demo_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demo Raw Data Set — demo_raw_data","text":"","code":"demo_raw_data"},{"path":[]},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demographics_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Table with Demographic Information — demographics_table","title":"Summary Table with Demographic Information — demographics_table","text":"Summary Table Demographic Information","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demographics_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Table with Demographic Information — demographics_table","text":"","code":"demographics_table(dat, studyid = \"102038g\")"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demographics_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Table with Demographic Information — demographics_table","text":"dat Data REDCap studyid String ID participant interest. Much length 1.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/demographics_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Table with Demographic Information — demographics_table","text":"","code":"demographics_table(demo_data, \"326231g\")     Study ID: 326231gEducation (years): 12Age at Visits: 79/82Gender: MaleHandedness: RHRace: Caucasian"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/digsym_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"WAIS-R Digit Symbols ranges — digsym_ranges","title":"WAIS-R Digit Symbols ranges — digsym_ranges","text":"WAIS-R Digit Symbols ranges","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/digsym_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WAIS-R Digit Symbols ranges — digsym_ranges","text":"","code":"digsym_ranges"},{"path":[]},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/for_zscores.html","id":null,"dir":"Reference","previous_headings":"","what":"Means and SDs for calculating z-scores — for_zscores","title":"Means and SDs for calculating z-scores — for_zscores","text":"Means SDs calculating z-scores","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/for_zscores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Means and SDs for calculating z-scores — for_zscores","text":"","code":"for_zscores"},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/for_zscores.html","id":"for-zscores","dir":"Reference","previous_headings":"","what":"for_zscores","title":"Means and SDs for calculating z-scores — for_zscores","text":"ravlt_trials_age_group/UDS_battery_age_group/otmt_age_group appropriate age group. function get_age_group can used convert actual age corresponding age group. edu_group education group based years education follows: 0-12 years, B 13-15, C 16, D >= 17 m mean variable group given age group (possible sex education group) sd standard deviation","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/functional_measures_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Table with Functional Measures — functional_measures_table","title":"Summary Table with Functional Measures — functional_measures_table","text":"Summary Table Functional Measures","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/functional_measures_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Table with Functional Measures — functional_measures_table","text":"","code":"functional_measures_table(dat, studyid = \"102038g\")"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/functional_measures_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Table with Functional Measures — functional_measures_table","text":"dat Data set use; see demo_data example studyid String giving participant id. Must length 1 one IDs dat$cog_studyid.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/functional_measures_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Table with Functional Measures — functional_measures_table","text":"","code":"functional_measures_table(demo_data, demo_data$cog_studyid[1])     Functional Measures            Visit 2       Visit 1          FAS: 0 1IQ-CODES     Informant: 3.44 3.88Self: 3.38 3.38"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/get_age_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Age Group for Standardized Scores — get_age_group","title":"Get Age Group for Standardized Scores — get_age_group","text":"Get various versions age groups finding standardized scores.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/get_age_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Age Group for Standardized Scores — get_age_group","text":"","code":"get_age_group(   age,   group_type = c(\"ravlt_trials\", \"ravlt_recog\", \"UDS_battery\", \"otmt\", \"cowat\", \"digsym\") )"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/get_age_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Age Group for Standardized Scores — get_age_group","text":"age numeric vector ages converted groups group_type string indicator age group return. Must one \"ravlt_trials\", \"ravlt_recog\", \"UDS_battery\", \"otmt\", \"cowat\", \"digsym\"","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/mainTableModule.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Module to Display NACC T-Cog Neuropsychological Assessment Summary Table — mainTableUI","title":"Shiny Module to Display NACC T-Cog Neuropsychological Assessment Summary Table — mainTableUI","text":"Shiny Module Display NACC T-Cog Neuropsychological Assessment Summary Table","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/mainTableModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Module to Display NACC T-Cog Neuropsychological Assessment Summary Table — mainTableUI","text":"","code":"mainTableUI(id)  mainTableServer(id, dat, studyid, date, table_font_size = 100)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/mainTableModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Module to Display NACC T-Cog Neuropsychological Assessment Summary Table — mainTableUI","text":"id ID string match module UI server UI dat Data set use studyid Study ID participant create summary table date visit date use table table_font_size Percentage font size use. Used scale table","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/main_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create NACC T-Cog Neuropsychological Assessment Summary Table — main_table","title":"Create NACC T-Cog Neuropsychological Assessment Summary Table — main_table","text":"function create summary table measures NACC T-Cog Neuropsychological Assessment.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/main_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create NACC T-Cog Neuropsychological Assessment Summary Table — main_table","text":"","code":"main_table(dat, bar_height = 16)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/main_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create NACC T-Cog Neuropsychological Assessment Summary Table — main_table","text":"dat Data use. Must exactly one row (data one participant one visit). bar_height pixels. Height percentile bars. Default: 16","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/main_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create NACC T-Cog Neuropsychological Assessment Summary Table — main_table","text":"object class gt::gt_tbl","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/main_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create NACC T-Cog Neuropsychological Assessment Summary Table — main_table","text":"","code":"main_table(   dat = demo_data[1,] )            Ra       w                Standardized              Percentile       Description     z-score       SS     General Cognition     CDR Global (1.5 SOB) 0.5  — — — NormalMoCA Blind 16 /22 — — — —TICS-m 25 /50 — — — —Attention/Processing     Oral Trailmaking Part A - Completion Time 10 &nbspsec 1.22 — 11.2% Low AverageOral Trailmaking Part A - Errors 0  −0.04 — 51.7% AverageNumber Span Forward - Total 7 /14 −0.35 — 36.4% AverageNumber Span Forward - Span Length 6 /9 −0.38 — 35% AverageNumber Span Backward - Total 6 /14 −0.14 — 44.3% AverageNumber Span Backward - Span Length 5 /8 0.31 — 62.1% AverageLanguage     Animal Fluency 5  −2.63 — 0.4% ImpairedVegetable Fluency 12  0.09 — 53.5% AverageF+L Words 11  −1.47 — 7.1% BorderlineF+L+C Words 12  — 5 5% BorderlineF Words 10  −0.50 — 30.9% AverageL Words 10  −0.30 — 38.3% AverageMemory     Craft Immediate - Verbatim 12 /44 −1.00 — 15.9% Low AverageCraft Immediate - Paraphrase 13 /25 −0.20 — 42.2% AverageCraft Delay - Verbatim (166% retained) 20 /44 0.47 — 68.1% AverageCraft Delay - Paraphrase (107% retained) 14 /25 0.16 — 56.5% AverageExecutive Functioning     Oral Trailmaking Part B - Completion Time 38.54 &nbspsec −0.40 — 65.6% AverageOral Trailmaking Part B - Errors 2  1.93 — 2.7% ImpairedMood     GDS-15 (Depression Symptoms) 1 /15 — — — Minimal"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/my_gt_plt_bar_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Updated from gtExtras::gt_plt_bar_pct — my_gt_plt_bar_pct","title":"Updated from gtExtras::gt_plt_bar_pct — my_gt_plt_bar_pct","text":"updates gtExtras::gt_plt_bar_pct handle missing values desired.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/my_gt_plt_bar_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updated from gtExtras::gt_plt_bar_pct — my_gt_plt_bar_pct","text":"","code":"my_gt_plt_bar_pct(   gt_object,   column,   height = 16,   width = 100,   fill = \"purple\",   background = \"#e1e1e1\",   scaled = FALSE,   labels = FALSE,   label_cutoff = 0.4,   decimals = 1,   font_style = \"bold\",   font_size = \"10px\" )"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/my_gt_plt_bar_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updated from gtExtras::gt_plt_bar_pct — my_gt_plt_bar_pct","text":"gt_object existing gt table object class gt_tbl column column wherein bar plot replace existing data. height number representing vertical height plot pixels. Defaults 16 px. width number representing horizontal width plot pixels. Defaults 100 px. Importantly, interacts label_cutoff argument, want change cutoff, may need adjust width well. fill character representing fill bar, defaults purple. Accepts named color (eg 'purple') hex color. background character representing background filling 100% mark bar, defaults light grey. Accepts named color (eg 'white') hex color. scaled TRUE/FALSE logical indicating value already scaled percent max (TRUE) needs scaled (FALSE). Defaults FALSE, meaning value divided max value column multiplied 100. labels TRUE/FALSE logical representing labels plotted. Defaults FALSE, meaning value labels plotted. label_cutoff number, 0 1, representing set inside/outside label boundary. Defaults 0.40 (40%) column's maximum value. value row less cutoff, label placed outside bar, otherwise placed within bar. interacts overall width bar, happy placement labels may try adjusting width argument well. decimals number representing many decimal places used label rounding. Defaults 1. font_style character representing font style labels. Accepts one 'bold' (default), 'italic', 'normal'. font_size character representing font size labels. Defaults '10px'.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plotCogVarApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny App Wrapping the variable plotting module — plotCogVarApp","title":"Shiny App Wrapping the variable plotting module — plotCogVarApp","text":"Shiny App Wrapping variable plotting module","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plotCogVarApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny App Wrapping the variable plotting module — plotCogVarApp","text":"","code":"plotCogVarApp(dat, trim = Inf)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plotCogVarApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny App Wrapping the variable plotting module — plotCogVarApp","text":"dat Data REDCap use","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plotCogVarModule.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Module to Plot Scores Across Visits — plotCogVarUI","title":"Shiny Module to Plot Scores Across Visits — plotCogVarUI","text":"shiny module meant visualizing changes time long list cognitive measures WLS ILIAD study.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plotCogVarModule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Module to Plot Scores Across Visits — plotCogVarUI","text":"","code":"plotCogVarUI(id)  plotCogVarServer(id, dat, trim = Inf)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plotCogVarModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Module to Plot Scores Across Visits — plotCogVarUI","text":"id ID string match module UI module server dat Data use plots. contain number cog_* variables","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plotCogVarModule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny Module to Plot Scores Across Visits — plotCogVarUI","text":"","code":"if (FALSE) { # \\dontrun{   plotCogVarApp(demo_data[1,]) } # }"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plot_cog_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Plot Cognitive Variables over Time — plot_cog_var","title":"Function to Plot Cognitive Variables over Time — plot_cog_var","text":"Function Plot Cognitive Variables Time","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plot_cog_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Plot Cognitive Variables over Time — plot_cog_var","text":"","code":"plot_cog_var(   dat,   var_to_plot = \"cog_flc_flu\",   type = c(\"raw\", \"standardized\", \"ss\"),   shade_descriptions = F,   trim = Inf )"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/plot_cog_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Plot Cognitive Variables over Time — plot_cog_var","text":"dat Data use var_to_plot variable plot without prefix type Type score plot. One \"raw\", \"standardized\", \"ss\", depending var_to_plot","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/prep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data from REDCap — prep_data","title":"Prepare data from REDCap — prep_data","text":"function prepares data downloaded REDCap presented using main_table(). removes records without valid age running add_standardized_scores(), adds age groups standardized scores.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/prep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data from REDCap — prep_data","text":"","code":"prep_data(   decrypt_password,   file,   nas = c(\"NA\", \"N/A\", \"-\", \" \", \"\", \"#REF!\", \"17/22\", \"#DIV/0!\", \"#VALUE!\", \"0,5\",     \"23a\", \"28b\") )"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/prep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data from REDCap — prep_data","text":"decrypt_password password decrypt REDCap API Token data can fetched straight REDCap. file path file downloaded REDCap nas character vector strings treated NA","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/prep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data from REDCap — prep_data","text":"","code":"if (FALSE) { # \\dontrun{ prep_data(   file = \"~/Downloads/WisconsinLongitudina_DATA_2024-08-10_1500.csv\",   nas = c(\"NA\", \"N/A\", \"-\", \" \", \"\", \"#REF!\", \"17/22\", \"#DIV/0!\", \"#VALUE!\") ) } # }"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/ravlt_recog_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"RAVLT Recognition ranges — ravlt_recog_ranges","title":"RAVLT Recognition ranges — ravlt_recog_ranges","text":"RAVLT Recognition ranges","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/ravlt_recog_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAVLT Recognition ranges — ravlt_recog_ranges","text":"","code":"ravlt_recog_ranges"},{"path":[]},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardize_to_z_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Raw Cognitive Scores to Z-Scores — standardize_to_z_scores","title":"Standardize Raw Cognitive Scores to Z-Scores — standardize_to_z_scores","text":"Calculate z-scores (raw score - average) / sd. Available wide array cognitive scores.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardize_to_z_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Raw Cognitive Scores to Z-Scores — standardize_to_z_scores","text":"","code":"standardize_to_z_scores(raw_scores, cog_var_name, education, age, sex)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardize_to_z_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Raw Cognitive Scores to Z-Scores — standardize_to_z_scores","text":"raw_scores Numeric vector raw scores cog_var_name String name variable. Used get correct means standard deviations. education Numeric vector years education. Used subset variables . age Numeric vector ages years sex Character vector sex participants. Must either \"m\" (male) \"f\" (female). Used subest variables ","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_digsym.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standardized WAIS-R Digit Symbol score — standardized_digsym","title":"Get standardized WAIS-R Digit Symbol score — standardized_digsym","text":"Get standardized WAIS-R Digit Symbol score","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_digsym.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standardized WAIS-R Digit Symbol score — standardized_digsym","text":"","code":"standardized_digsym(raw_score, age)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_digsym.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standardized WAIS-R Digit Symbol score — standardized_digsym","text":"raw_score numeric vector raw score age numeric vector length raw_score ages participants","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_digsym.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standardized WAIS-R Digit Symbol score — standardized_digsym","text":"numeric vector length raw_score standardized scores.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_digsym.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get standardized WAIS-R Digit Symbol score — standardized_digsym","text":"","code":"standardized_digsym(24, 80) #> [1] 9"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_flc_flu.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standardized F+L+C Words score — standardized_flc_flu","title":"Get standardized F+L+C Words score — standardized_flc_flu","text":"function provides standardized F+L+C scores given raw score age group.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_flc_flu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standardized F+L+C Words score — standardized_flc_flu","text":"","code":"standardized_flc_flu(raw_score, age)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_flc_flu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standardized F+L+C Words score — standardized_flc_flu","text":"raw_score numeric vector age numeric vector length raw_score ages","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_flc_flu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standardized F+L+C Words score — standardized_flc_flu","text":"numeric vector length raw_score standardized scores.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_flc_flu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get standardized F+L+C Words score — standardized_flc_flu","text":"","code":"standardized_flc_flu(20, age = 70) #> [1] 6"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_ravlt_recog_acc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standardized RAVLT Recognition Accuracy score — standardized_ravlt_recog_acc","title":"Get standardized RAVLT Recognition Accuracy score — standardized_ravlt_recog_acc","text":"Get standardized RAVLT Recognition Accuracy score","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_ravlt_recog_acc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standardized RAVLT Recognition Accuracy score — standardized_ravlt_recog_acc","text":"","code":"standardized_ravlt_recog_acc(raw_score, age, sex)"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_ravlt_recog_acc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standardized RAVLT Recognition Accuracy score — standardized_ravlt_recog_acc","text":"raw_score Raw score percentage (0-100) age numeric vector length raw_score sex vector length raw_score containing corresponding sex participants. entry must either \"m\" (male) \"f\" (female)","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_ravlt_recog_acc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standardized RAVLT Recognition Accuracy score — standardized_ravlt_recog_acc","text":"numeric vector length raw_score standardized scores.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/standardized_ravlt_recog_acc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get standardized RAVLT Recognition Accuracy score — standardized_ravlt_recog_acc","text":"","code":"standardized_ravlt_recog_acc(raw_score = 75, age = 60, sex = \"m\") #> [1] 6"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/var_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Row Labels for Main Table — var_labels","title":"Create Row Labels for Main Table — var_labels","text":"main table interest uses observed data row labels. function creates row labels named vector easy use stringr::str_replace_all create new column desired row labels. parameters \"raw\" values.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/var_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Row Labels for Main Table — var_labels","text":"","code":"var_labels(   cog_cdr_sob = NA,   cog_tmta_err = NA,   cog_tmta_lines = NA,   cog_benson_retained = NA,   cog_benson_recog = NA,   cog_ravlt_a1 = NA,   cog_ravlt_a2 = NA,   cog_ravlt_a3 = NA,   cog_ravlt_a4 = NA,   cog_ravlt_a5 = NA,   cog_ravlt_recog_tp = NA,   cog_ravlt_recog_tn = NA,   cog_tmtb_err = NA,   cog_tmtb_lines = NA,   cog_craft_verb_retain = NA,   cog_craft_par_retain = NA )"},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/var_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Row Labels for Main Table — var_labels","text":"cog_cdr_sob Raw observed value CDR Sob cog_tmta_err number errors made Trail Making Test cog_tmta_lines lines completed Trail Making Test cog_benson_retained percent retained Benson cog_benson_recog Benson recognized cog_ravlt_a1 Rey AVLT Trial 1 cog_ravlt_a2 Rey AVLT Trial 2 cog_ravlt_a3 Rey AVLT Trial 3 cog_ravlt_a4 Rey AVLT Trial 4 cog_ravlt_a5 Rey AVLT Trial 5 cog_ravlt_recog_tp Rey AVLT Recognition True Positives cog_ravlt_recog_tn Rey AVLT Recognition True Negatives cog_tmtb_err number errors made Trail Making Test B cog_tmtb_lines lines completed Trail Making Test B","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/wlsRedcapApp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wlsRedcapApp: NACC T-Cog Neuropsychological Assessments — wlsRedcapApp-package","title":"wlsRedcapApp: NACC T-Cog Neuropsychological Assessments — wlsRedcapApp-package","text":"Functions working NACC T-Cog Neuropsychological Assessments. notably includes Shiny application specifically work WLS REDCap data.","code":""},{"path":[]},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/wlsRedcapApp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wlsRedcapApp: NACC T-Cog Neuropsychological Assessments — wlsRedcapApp-package","text":"Maintainer: Ralph Møller Trane rtrane@wisc.edu Authors: Victoria Williams","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/wlsRedcapApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Start Shiny App — wlsRedcapApp","title":"Start Shiny App — wlsRedcapApp","text":"Wrapper function start shiny app.","code":""},{"path":"https://rmtrane.github.io/wlsRedcapApp/reference/wlsRedcapApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start Shiny App — wlsRedcapApp","text":"","code":"wlsRedcapApp()"}]
